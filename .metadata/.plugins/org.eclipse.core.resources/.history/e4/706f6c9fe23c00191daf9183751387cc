package com.qa.restclient;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import org.apache.http.Header;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.json.JSONException;
import org.json.JSONObject;

public class RestClient {

	private static RestClient restClient_instance = null;
	
	public static RestClient getInstance() {
		if(restClient_instance == null)
			restClient_instance = new RestClient();
		return restClient_instance;
	}
	
	CloseableHttpResponse httpResponse;
	/*
	 * Get response
	 */
	public CloseableHttpResponse get(String url) {
		try {
			//Get Http Response
			CloseableHttpClient httpClient =  HttpClients.createDefault();
			HttpGet httpGet = new HttpGet(url);
			httpResponse =  httpClient.execute(httpGet);
			
		}catch (ClientProtocolException e) {
			e.printStackTrace();
		}catch (IOException e) {
			e.printStackTrace();
		}
		return httpResponse;
	}
	
	public JSONObject getJSONResponse() {
		JSONObject jsonResponse = null;
		try {
			String responseString =  EntityUtils.toString(httpResponse.getEntity(), "UTF-8");
			
			jsonResponse = new JSONObject(responseString);
		}catch(IOException e) {
			e.printStackTrace();
		}catch (JSONException e) {
			e.printStackTrace();
		}
		return jsonResponse;
	}
	
	public HashMap<String, String> getAllHeaders() {
		Header[] headers =  httpResponse.getAllHeaders();
		HashMap<String, String> hashMap = new HashMap<String, String>();
		for(Header header : headers) {
			hashMap.put(header.getName(), header.getValue());
		}
		return hashMap;
	}
	
	/*
	 * Get method with Headers
	 */
	public CloseableHttpResponse get(String url, HashMap<String, String> headerMap) {
		CloseableHttpClient httpClient = HttpClients.createDefault();
		HttpGet httpGet = new HttpGet(url);
		
		for(Map.Entry<String, String> entryObj : headerMap.entrySet()) {
			httpGet.addHeader(entryObj.getKey(), entryObj.getValue());
		}
		
		httpResponse = httpClient.execute(httpGet);
	}
}
